# An alternative build environment makes it easy to compile cross
# platform.

import sys
import re

env = Environment()

src = ["giv.c",
       "giv-backstore.c",
       "giv_mark_tree.c",
       "colormaps.c",
       "svg.c"]

# Extract version from configure.in
f = open("../configure.in")
p = re.compile(r"AM_INIT_AUTOMAKE\(giv, ([\d\.]+)")
for line in f:
    if p.search(line):
        env['VER'] = p.match(line).group(1)

# All purpose template filling routine
def template_fill(env, target, source):
    out = open(str(target[0]), "wb")
    inp = open(str(source[0]), "r")

    for line in inp.readlines():
        line = re.sub('@(.*?)@',
                      lambda x: env[x.group(1)],
                      line)
        out.write(line)
        
    out.close()
    inp.close()

env.Command("giv-logo.i",
            "../doc/giv-logo.png",
            "gdk-pixbuf-csource --name=image_giv_icon_inline $SOURCES > $TARGET")

if ARGUMENTS.get('mingw', 0):
    env['CC']='/usr/local/mingw32/bin/mingw32-gcc',
    env['CXX']='/usr/local/mingw32/bin/mingw32-g++'
    env.ParseConfig("PKG_CONFIG_PATH=/usr/local/mingw32/lib/pkgconfig pkg-config --cflags --libs gtk+-2.0 gtkimageviewer")
    env['OBJSUFFIX']=".obj"
    env['PROGSUFFIX'] = ".exe"
    env['CROOT'] = "z:\\dosc"

    env.Command("giv.wine.nsi",
                ["giv.nsi.in",
                 "../configure.in"],
                template_fill
                )
    env.Command("giv.rc",
                ["giv.rc.in"],
                template_fill
                )
    
    env.Command("COPYING.dos",
                "../COPYING",
                ["unix2dos < ../COPYING > COPYING.dos"])
    
    env.Command("InstallGiv-" + env['VER'] + ".exe",
                ["giv.exe","giv.wine.nsi"],
                ["wine \"z:\dosc\Program Files\NSIS\makensis.exe\" giv.wine.nsi"])
    res = env.Command("giv.res.o",
                      ["giv.rc",
                       "giv-logo.ico"],
                      ["/usr/local/mingw32/bin/mingw32-windres giv.rc giv.res.o"])

    src = src + res

    env.Append(LINKFLAGS=['-mwindows'])
else:
    # Posix by default
    env.ParseConfig("pkg-config --cflags --libs gtk+-2.0 gtkimageviewer")


env.Program("giv",
            src)

